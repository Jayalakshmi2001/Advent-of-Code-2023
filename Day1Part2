//DAY1-PART2

package AdventOfCode2023;
import java.io.File;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map.Entry;
public class Day1Part2
{
    public static void main(String args[]) 
    {
    	String filename="Day1Part2Input.txt";
    	HashMap<String,String> numbers=new HashMap<>();
    	numbers.put("one", "1");
    	numbers.put("two", "2");
    	numbers.put("three", "3");
    	numbers.put("four", "4");
    	numbers.put("five", "5");
    	numbers.put("six", "6");
    	numbers.put("seven", "7");
    	numbers.put("eight", "8");
    	numbers.put("nine", "9");
    	try
    	{
		    BufferedReader br=new BufferedReader(new FileReader(filename));
        int sum=0;
        for(String word:br.lines().toList())
        {
        	int index=1000000;
        	while(index==1000000)
        	{
        		String first="";
        		for(Entry<String, String> entry : numbers.entrySet())
        		{
        			int position=word.indexOf(entry.getKey());
        			
        				if(position!=-1 && position<index)
        				{
        					index=word.indexOf(entry.getKey());
        					first=entry.getKey();
        				}
        		}
        		
        		index=-1;
        		if(numbers.containsKey(first))
        		{
        			word=word.replaceFirst(first, numbers.get(first));
        			index=1000000;
        		}
        	}
            sum=sum+getCalibrationValue(word);
        }
        System.out.println(sum);
    	}
    	
    	catch(IOException e)
    	{
    		e.printStackTrace();
    	}
    }
   
    
    public static int getCalibrationValue(String word)
    {
    	
    	int firstDigit=-1;
    	int lastDigit=-1;
    	for(String ch:word.split(""))
    	{
    		if(Character.isDigit(ch.charAt(0)))
    		{
    			if(firstDigit==-1)
    			{
    				firstDigit=Integer.parseInt(ch);
    			}
    			lastDigit=Integer.parseInt(ch);
    		}
    	}
    	
        int calibrationValue=firstDigit*10 +lastDigit;
        return calibrationValue;
    }
    
   
}
